
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLPARENRPARENleftEOUleftMAIORMENORMAIOREQUALSMENOREQUALSEQUALSDIFFleftPLUSMINUSleftTIMESDIVIDErightEXPLAMATIONINTERROGATIONASSIGN CAR COLON COMMA CONSTSTRING DIFF DIVIDE E ENQUANTO ENTAO EQUALS ESCREVA EXECUTE EXPLAMATION ID INT INTERROGATION LBRACE LCOLC LEIA LPAREN MAIOR MAIOREQUALS MENOR MENOREQUALS MINUS MOD NORMALSTRING NOVALINHA NUMBER OU PLUS PROGRAMA RBRACE RCOLC RETORNE RPAREN SE SEMICOLON SENAO TIMESPrograma : DeclFuncVar DeclProg \n\tDeclFuncVar : Tipo ID DeclVar SEMICOLON DeclFuncVar\n\tDeclFuncVar : Tipo ID LCOLC NUMBER RCOLC DeclVar SEMICOLON DeclFuncVar\n\tDeclFuncVar : Tipo ID DeclFunc DeclFuncVar\n\tDeclFuncVar :  \n\tDeclProg : PROGRAMA Bloco\n\tDeclVar : COMMA ID DeclVar \n\tDeclVar : COMMA ID LCOLC NUMBER RCOLC DeclVar\n\tDeclVar :  \n\tDeclFunc : LPAREN ListaParametros RPAREN Bloco\n\tListaParametros : \n\tListaParametros : ListaParametrosCont\n\t \n\tListaParametrosCont : Tipo ID\n\tListaParametrosCont : Tipo ID LCOLC RCOLC\n\tListaParametrosCont : Tipo ID COMMA ListaParametrosCont\n\tListaParametrosCont : Tipo ID LCOLC RCOLC COMMA ListaParametrosCont\n\t \n\tBloco : LBRACE ListaDeclVar ListaComando RBRACE\n\tBloco : LBRACE ListaDeclVar RBRACE\n\t\n\tListaDeclVar : \n\tListaDeclVar : Tipo ID DeclVar SEMICOLON ListaDeclVar \n\tListaDeclVar : Tipo ID LCOLC NUMBER RCOLC DeclVar SEMICOLON ListaDeclVar\n\t\n\tTipo : INT\n\tTipo : CAR\n\t\n\tListaComando : Comando\n\tListaComando : Comando ListaComando\n\t\n\tComando : SEMICOLON\n\tComando : Expr SEMICOLON\n\tComando : RETORNE Expr SEMICOLON\n\tComando : LEIA LValueExpr SEMICOLON\n\tComando : ESCREVA Expr SEMICOLON\n\tComando : ESCREVA NORMALSTRING SEMICOLON\n\tComando : NOVALINHA SEMICOLON\n\tComando : SE LPAREN Expr RPAREN ENTAO Comando\n\tComando : SE LPAREN Expr RPAREN ENTAO Comando SENAO Comando\n\tComando : ENQUANTO LPAREN Expr RPAREN EXECUTE Comando\n\tComando : Bloco\n\tExpr : AssignExpr\n\tAssignExpr : CondExpr\n\tAssignExpr : LValueExpr ASSIGN AssignExpr\n\t\n\tCondExpr : OrExpr\n\tCondExpr : OrExpr INTERROGATION Expr COLON CondExpr\n\t\n\tOrExpr : OrExpr OU AndExpr\n\tOrExpr : AndExpr\n\t\n\tAndExpr : AndExpr E EqExpr\n\tAndExpr : EqExpr\n\t\n\tEqExpr : EqExpr EQUALS DesigExpr\n\tEqExpr : EqExpr DIFF DesigExpr\n\tEqExpr : DesigExpr\n\t\n\tDesigExpr : DesigExpr MENOR AddExpr\n\tDesigExpr : DesigExpr MAIOR AddExpr\n\tDesigExpr : DesigExpr MAIOREQUALS AddExpr\n\tDesigExpr : DesigExpr MENOREQUALS AddExpr\n\tDesigExpr : AddExpr\n\t\n\tAddExpr : AddExpr PLUS MulExpr\n    AddExpr : AddExpr MINUS MulExpr\n    AddExpr : MulExpr\n    \n\tMulExpr : MulExpr TIMES UnExpr\n\tMulExpr : MulExpr DIVIDE UnExpr\n\tMulExpr : MulExpr MOD UnExpr\n\tMulExpr : UnExpr\n\t\n\tUnExpr : MINUS PrimExpr\n\tUnExpr : EXPLAMATION PrimExpr\n\tUnExpr : PrimExpr\n\t\n\tLValueExpr : ID LCOLC Expr RCOLC\n\tLValueExpr : ID\n\t\n\tPrimExpr : ID LPAREN ListExpr RPAREN\n\tPrimExpr : ID LPAREN RPAREN\n\tPrimExpr : ID LCOLC Expr RCOLC\n\tPrimExpr : ID\n\tPrimExpr : CONSTSTRING\n\tPrimExpr : NUMBER\n\tPrimExpr : LPAREN Expr RPAREN\n\t\n\tListExpr : AssignExpr\n\tListExpr : ListExpr COMMA AssignExpr\n\t'
    
_lr_action_items = {'PROGRAMA':([0,2,13,18,20,26,55,61,97,130,144,],[-5,7,-5,-5,-4,-18,-2,-17,-10,-5,-3,]),'INT':([0,10,13,15,18,26,61,97,99,128,130,146,157,],[4,4,4,4,4,-18,-17,-10,4,4,4,4,4,]),'CAR':([0,10,13,15,18,26,61,97,99,128,130,146,157,],[5,5,5,5,5,-18,-17,-10,5,5,5,5,5,]),'$end':([1,6,9,26,61,],[0,-1,-6,-18,-17,]),'ID':([3,4,5,10,14,16,17,24,26,27,28,30,31,33,36,38,48,51,61,63,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,101,102,104,105,127,128,137,140,142,148,149,155,156,157,158,159,160,],[8,-22,-23,-19,21,42,54,60,-18,42,-26,42,66,42,42,-36,91,91,-17,-27,42,-32,42,42,42,91,42,42,91,91,91,91,91,91,91,91,91,91,91,91,-28,-29,42,-30,-31,42,-19,91,42,-20,42,42,-33,-35,-19,42,-21,-34,]),'LBRACE':([7,10,16,26,27,28,38,59,61,63,70,100,101,104,105,128,142,148,149,155,156,157,158,159,160,],[10,-19,10,-18,10,-26,-36,10,-17,-27,-32,-28,-29,-30,-31,-19,-20,10,10,-33,-35,-19,10,-21,-34,]),'LCOLC':([8,21,42,54,60,66,91,],[12,58,76,94,98,102,127,]),'COMMA':([8,21,40,41,42,43,44,45,46,47,49,50,52,53,54,56,60,90,91,92,103,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,138,139,143,150,151,152,],[14,14,-38,-40,-69,-43,-45,-48,-53,-56,-60,-63,-70,-71,14,14,99,-61,-69,-62,-39,-72,-42,140,-67,-73,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,14,146,-68,-66,14,-41,-74,-68,]),'SEMICOLON':([8,10,11,16,21,26,27,28,29,34,38,39,40,41,42,43,44,45,46,47,49,50,52,53,54,56,57,61,63,64,65,66,68,69,70,90,91,92,93,95,100,101,103,104,105,107,110,113,115,116,117,118,119,120,121,122,123,124,125,126,128,131,138,139,142,143,145,147,148,149,150,152,153,155,156,157,158,159,160,],[-9,-19,18,28,-9,-18,28,-26,63,70,-36,-37,-38,-40,-69,-43,-45,-48,-53,-56,-60,-63,-70,-71,-9,-9,-7,-17,-27,100,101,-65,104,105,-32,-61,-69,-62,128,130,-28,-29,-39,-30,-31,-72,-42,-67,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-19,-9,-68,-66,-20,-9,-8,-64,28,28,-41,-68,157,-33,-35,-19,28,-21,-34,]),'LPAREN':([8,10,16,26,27,28,30,33,35,36,37,38,42,48,51,61,63,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,100,101,102,104,105,127,128,137,140,142,148,149,155,156,157,158,159,160,],[15,-19,36,-18,36,-26,36,36,71,36,73,-36,77,36,36,-17,-27,36,-32,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,77,-28,-29,36,-30,-31,36,-19,36,36,-20,36,36,-33,-35,-19,36,-21,-34,]),'RBRACE':([10,16,25,26,27,28,38,61,62,63,70,100,101,104,105,128,142,155,156,157,159,160,],[-19,26,61,-18,-24,-26,-36,-17,-25,-27,-32,-28,-29,-30,-31,-19,-20,-33,-35,-19,-21,-34,]),'RETORNE':([10,16,26,27,28,38,61,63,70,100,101,104,105,128,142,148,149,155,156,157,158,159,160,],[-19,30,-18,30,-26,-36,-17,-27,-32,-28,-29,-30,-31,-19,-20,30,30,-33,-35,-19,30,-21,-34,]),'LEIA':([10,16,26,27,28,38,61,63,70,100,101,104,105,128,142,148,149,155,156,157,158,159,160,],[-19,31,-18,31,-26,-36,-17,-27,-32,-28,-29,-30,-31,-19,-20,31,31,-33,-35,-19,31,-21,-34,]),'ESCREVA':([10,16,26,27,28,38,61,63,70,100,101,104,105,128,142,148,149,155,156,157,158,159,160,],[-19,33,-18,33,-26,-36,-17,-27,-32,-28,-29,-30,-31,-19,-20,33,33,-33,-35,-19,33,-21,-34,]),'NOVALINHA':([10,16,26,27,28,38,61,63,70,100,101,104,105,128,142,148,149,155,156,157,158,159,160,],[-19,34,-18,34,-26,-36,-17,-27,-32,-28,-29,-30,-31,-19,-20,34,34,-33,-35,-19,34,-21,-34,]),'SE':([10,16,26,27,28,38,61,63,70,100,101,104,105,128,142,148,149,155,156,157,158,159,160,],[-19,35,-18,35,-26,-36,-17,-27,-32,-28,-29,-30,-31,-19,-20,35,35,-33,-35,-19,35,-21,-34,]),'ENQUANTO':([10,16,26,27,28,38,61,63,70,100,101,104,105,128,142,148,149,155,156,157,158,159,160,],[-19,37,-18,37,-26,-36,-17,-27,-32,-28,-29,-30,-31,-19,-20,37,37,-33,-35,-19,37,-21,-34,]),'MINUS':([10,16,26,27,28,30,33,36,38,42,46,47,49,50,52,53,61,63,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,105,107,113,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,142,148,149,152,155,156,157,158,159,160,],[-19,48,-18,48,-26,48,48,48,-36,-69,86,-56,-60,-63,-70,-71,-17,-27,48,-32,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-61,-69,-62,-28,-29,48,-30,-31,-72,-67,86,86,86,86,-54,-55,-57,-58,-59,48,-19,48,-68,-66,48,-20,48,48,-68,-33,-35,-19,48,-21,-34,]),'EXPLAMATION':([10,16,26,27,28,30,33,36,38,61,63,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,101,102,104,105,127,128,137,140,142,148,149,155,156,157,158,159,160,],[-19,51,-18,51,-26,51,51,51,-36,-17,-27,51,-32,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-28,-29,51,-30,-31,51,-19,51,51,-20,51,51,-33,-35,-19,51,-21,-34,]),'CONSTSTRING':([10,16,26,27,28,30,33,36,38,48,51,61,63,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,101,102,104,105,127,128,137,140,142,148,149,155,156,157,158,159,160,],[-19,52,-18,52,-26,52,52,52,-36,52,52,-17,-27,52,-32,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-28,-29,52,-30,-31,52,-19,52,52,-20,52,52,-33,-35,-19,52,-21,-34,]),'NUMBER':([10,12,16,26,27,28,30,33,36,38,48,51,58,61,63,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,94,100,101,102,104,105,127,128,137,140,142,148,149,155,156,157,158,159,160,],[-19,19,53,-18,53,-26,53,53,53,-36,53,53,96,-17,-27,53,-32,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,129,-28,-29,53,-30,-31,53,-19,53,53,-20,53,53,-33,-35,-19,53,-21,-34,]),'RPAREN':([15,22,23,39,40,41,42,43,44,45,46,47,49,50,52,53,60,72,77,90,91,92,103,106,107,108,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,132,133,138,139,150,151,152,154,],[-11,59,-12,-37,-38,-40,-69,-43,-45,-48,-53,-56,-60,-63,-70,-71,-13,107,113,-61,-69,-62,-39,135,-72,136,-42,139,-67,-73,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-14,-15,-68,-66,-41,-74,-68,-16,]),'RCOLC':([19,39,40,41,42,43,44,45,46,47,49,50,52,53,90,91,92,96,98,103,107,110,111,113,115,116,117,118,119,120,121,122,123,124,125,126,129,134,138,139,141,150,152,],[56,-37,-38,-40,-69,-43,-45,-48,-53,-56,-60,-63,-70,-71,-61,-69,-62,131,132,-39,-72,-42,138,-67,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,143,147,-68,-66,152,-41,-68,]),'SENAO':([26,28,38,61,63,70,100,101,104,105,155,156,160,],[-18,-26,-36,-17,-27,-32,-28,-29,-30,-31,158,-35,-34,]),'ASSIGN':([32,42,138,],[67,-65,-64,]),'NORMALSTRING':([33,],[69,]),'COLON':([39,40,41,42,43,44,45,46,47,49,50,52,53,90,91,92,103,107,109,110,113,115,116,117,118,119,120,121,122,123,124,125,126,138,139,150,152,],[-37,-38,-40,-69,-43,-45,-48,-53,-56,-60,-63,-70,-71,-61,-69,-62,-39,-72,137,-42,-67,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-41,-68,]),'INTERROGATION':([41,42,43,44,45,46,47,49,50,52,53,90,91,92,107,110,113,115,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[74,-69,-43,-45,-48,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-42,-67,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'OU':([41,42,43,44,45,46,47,49,50,52,53,90,91,92,107,110,113,115,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[75,-69,-43,-45,-48,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-42,-67,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'TIMES':([42,47,49,50,52,53,90,91,92,107,113,122,123,124,125,126,138,139,152,],[-69,87,-60,-63,-70,-71,-61,-69,-62,-72,-67,87,87,-57,-58,-59,-68,-66,-68,]),'DIVIDE':([42,47,49,50,52,53,90,91,92,107,113,122,123,124,125,126,138,139,152,],[-69,88,-60,-63,-70,-71,-61,-69,-62,-72,-67,88,88,-57,-58,-59,-68,-66,-68,]),'MOD':([42,47,49,50,52,53,90,91,92,107,113,122,123,124,125,126,138,139,152,],[-69,89,-60,-63,-70,-71,-61,-69,-62,-72,-67,89,89,-57,-58,-59,-68,-66,-68,]),'PLUS':([42,46,47,49,50,52,53,90,91,92,107,113,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,85,-56,-60,-63,-70,-71,-61,-69,-62,-72,-67,85,85,85,85,-54,-55,-57,-58,-59,-68,-66,-68,]),'MENOR':([42,45,46,47,49,50,52,53,90,91,92,107,113,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,81,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-67,81,81,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'MAIOR':([42,45,46,47,49,50,52,53,90,91,92,107,113,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,82,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-67,82,82,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'MAIOREQUALS':([42,45,46,47,49,50,52,53,90,91,92,107,113,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,83,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-67,83,83,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'MENOREQUALS':([42,45,46,47,49,50,52,53,90,91,92,107,113,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,84,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-67,84,84,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'EQUALS':([42,44,45,46,47,49,50,52,53,90,91,92,107,113,115,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,79,-48,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-67,79,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'DIFF':([42,44,45,46,47,49,50,52,53,90,91,92,107,113,115,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,80,-48,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,-67,80,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'E':([42,43,44,45,46,47,49,50,52,53,90,91,92,107,110,113,115,116,117,118,119,120,121,122,123,124,125,126,138,139,152,],[-69,78,-45,-48,-53,-56,-60,-63,-70,-71,-61,-69,-62,-72,78,-67,-44,-46,-47,-49,-50,-51,-52,-54,-55,-57,-58,-59,-68,-66,-68,]),'ENTAO':([135,],[148,]),'EXECUTE':([136,],[149,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'DeclFuncVar':([0,13,18,130,],[2,20,55,144,]),'Tipo':([0,10,13,15,18,99,128,130,146,157,],[3,17,3,24,3,24,17,3,24,17,]),'DeclProg':([2,],[6,]),'Bloco':([7,16,27,59,148,149,158,],[9,38,38,97,38,38,38,]),'DeclVar':([8,21,54,56,131,143,],[11,57,93,95,145,153,]),'DeclFunc':([8,],[13,]),'ListaDeclVar':([10,128,157,],[16,142,159,]),'ListaParametros':([15,],[22,]),'ListaParametrosCont':([15,99,146,],[23,133,154,]),'ListaComando':([16,27,],[25,62,]),'Comando':([16,27,148,149,158,],[27,27,155,156,160,]),'Expr':([16,27,30,33,36,71,73,74,76,102,127,148,149,158,],[29,29,64,68,72,106,108,109,111,134,141,29,29,29,]),'LValueExpr':([16,27,30,31,33,36,67,71,73,74,76,77,102,127,140,148,149,158,],[32,32,32,65,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'AssignExpr':([16,27,30,33,36,67,71,73,74,76,77,102,127,140,148,149,158,],[39,39,39,39,39,103,39,39,39,39,114,39,39,151,39,39,39,]),'CondExpr':([16,27,30,33,36,67,71,73,74,76,77,102,127,137,140,148,149,158,],[40,40,40,40,40,40,40,40,40,40,40,40,40,150,40,40,40,40,]),'OrExpr':([16,27,30,33,36,67,71,73,74,76,77,102,127,137,140,148,149,158,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'AndExpr':([16,27,30,33,36,67,71,73,74,75,76,77,102,127,137,140,148,149,158,],[43,43,43,43,43,43,43,43,43,110,43,43,43,43,43,43,43,43,43,]),'EqExpr':([16,27,30,33,36,67,71,73,74,75,76,77,78,102,127,137,140,148,149,158,],[44,44,44,44,44,44,44,44,44,44,44,44,115,44,44,44,44,44,44,44,]),'DesigExpr':([16,27,30,33,36,67,71,73,74,75,76,77,78,79,80,102,127,137,140,148,149,158,],[45,45,45,45,45,45,45,45,45,45,45,45,45,116,117,45,45,45,45,45,45,45,]),'AddExpr':([16,27,30,33,36,67,71,73,74,75,76,77,78,79,80,81,82,83,84,102,127,137,140,148,149,158,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,118,119,120,121,46,46,46,46,46,46,46,]),'MulExpr':([16,27,30,33,36,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,102,127,137,140,148,149,158,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,122,123,47,47,47,47,47,47,47,]),'UnExpr':([16,27,30,33,36,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,102,127,137,140,148,149,158,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,124,125,126,49,49,49,49,49,49,49,]),'PrimExpr':([16,27,30,33,36,48,51,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,102,127,137,140,148,149,158,],[50,50,50,50,50,90,92,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ListExpr':([77,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> DeclFuncVar DeclProg','Programa',2,'p_Programa','analisador_sintatico.py',17),
  ('DeclFuncVar -> Tipo ID DeclVar SEMICOLON DeclFuncVar','DeclFuncVar',5,'p_DeclFuncVar','analisador_sintatico.py',21),
  ('DeclFuncVar -> Tipo ID LCOLC NUMBER RCOLC DeclVar SEMICOLON DeclFuncVar','DeclFuncVar',8,'p_DeclFuncVar','analisador_sintatico.py',22),
  ('DeclFuncVar -> Tipo ID DeclFunc DeclFuncVar','DeclFuncVar',4,'p_DeclFuncVar','analisador_sintatico.py',23),
  ('DeclFuncVar -> <empty>','DeclFuncVar',0,'p_DeclFuncVar','analisador_sintatico.py',24),
  ('DeclProg -> PROGRAMA Bloco','DeclProg',2,'p_DeclProg','analisador_sintatico.py',28),
  ('DeclVar -> COMMA ID DeclVar','DeclVar',3,'p_DeclVar','analisador_sintatico.py',32),
  ('DeclVar -> COMMA ID LCOLC NUMBER RCOLC DeclVar','DeclVar',6,'p_DeclVar','analisador_sintatico.py',33),
  ('DeclVar -> <empty>','DeclVar',0,'p_DeclVar','analisador_sintatico.py',34),
  ('DeclFunc -> LPAREN ListaParametros RPAREN Bloco','DeclFunc',4,'p_DeclFunc','analisador_sintatico.py',38),
  ('ListaParametros -> <empty>','ListaParametros',0,'p_ListaParametros','analisador_sintatico.py',42),
  ('ListaParametros -> ListaParametrosCont','ListaParametros',1,'p_ListaParametros','analisador_sintatico.py',43),
  ('ListaParametrosCont -> Tipo ID','ListaParametrosCont',2,'p_ListaParametrosCont','analisador_sintatico.py',48),
  ('ListaParametrosCont -> Tipo ID LCOLC RCOLC','ListaParametrosCont',4,'p_ListaParametrosCont','analisador_sintatico.py',49),
  ('ListaParametrosCont -> Tipo ID COMMA ListaParametrosCont','ListaParametrosCont',4,'p_ListaParametrosCont','analisador_sintatico.py',50),
  ('ListaParametrosCont -> Tipo ID LCOLC RCOLC COMMA ListaParametrosCont','ListaParametrosCont',6,'p_ListaParametrosCont','analisador_sintatico.py',51),
  ('Bloco -> LBRACE ListaDeclVar ListaComando RBRACE','Bloco',4,'p_Bloco','analisador_sintatico.py',56),
  ('Bloco -> LBRACE ListaDeclVar RBRACE','Bloco',3,'p_Bloco','analisador_sintatico.py',57),
  ('ListaDeclVar -> <empty>','ListaDeclVar',0,'p_ListaDeclVar','analisador_sintatico.py',62),
  ('ListaDeclVar -> Tipo ID DeclVar SEMICOLON ListaDeclVar','ListaDeclVar',5,'p_ListaDeclVar','analisador_sintatico.py',63),
  ('ListaDeclVar -> Tipo ID LCOLC NUMBER RCOLC DeclVar SEMICOLON ListaDeclVar','ListaDeclVar',8,'p_ListaDeclVar','analisador_sintatico.py',64),
  ('Tipo -> INT','Tipo',1,'p_Tipo','analisador_sintatico.py',69),
  ('Tipo -> CAR','Tipo',1,'p_Tipo','analisador_sintatico.py',70),
  ('ListaComando -> Comando','ListaComando',1,'p_ListaComando','analisador_sintatico.py',75),
  ('ListaComando -> Comando ListaComando','ListaComando',2,'p_ListaComando','analisador_sintatico.py',76),
  ('Comando -> SEMICOLON','Comando',1,'p_Comando','analisador_sintatico.py',81),
  ('Comando -> Expr SEMICOLON','Comando',2,'p_Comando','analisador_sintatico.py',82),
  ('Comando -> RETORNE Expr SEMICOLON','Comando',3,'p_Comando','analisador_sintatico.py',83),
  ('Comando -> LEIA LValueExpr SEMICOLON','Comando',3,'p_Comando','analisador_sintatico.py',84),
  ('Comando -> ESCREVA Expr SEMICOLON','Comando',3,'p_Comando','analisador_sintatico.py',85),
  ('Comando -> ESCREVA NORMALSTRING SEMICOLON','Comando',3,'p_Comando','analisador_sintatico.py',86),
  ('Comando -> NOVALINHA SEMICOLON','Comando',2,'p_Comando','analisador_sintatico.py',87),
  ('Comando -> SE LPAREN Expr RPAREN ENTAO Comando','Comando',6,'p_Comando','analisador_sintatico.py',88),
  ('Comando -> SE LPAREN Expr RPAREN ENTAO Comando SENAO Comando','Comando',8,'p_Comando','analisador_sintatico.py',89),
  ('Comando -> ENQUANTO LPAREN Expr RPAREN EXECUTE Comando','Comando',6,'p_Comando','analisador_sintatico.py',90),
  ('Comando -> Bloco','Comando',1,'p_Comando','analisador_sintatico.py',91),
  ('Expr -> AssignExpr','Expr',1,'p_Expr','analisador_sintatico.py',95),
  ('AssignExpr -> CondExpr','AssignExpr',1,'p_AssignExpr','analisador_sintatico.py',99),
  ('AssignExpr -> LValueExpr ASSIGN AssignExpr','AssignExpr',3,'p_AssignExpr','analisador_sintatico.py',100),
  ('CondExpr -> OrExpr','CondExpr',1,'p_CondExpr','analisador_sintatico.py',105),
  ('CondExpr -> OrExpr INTERROGATION Expr COLON CondExpr','CondExpr',5,'p_CondExpr','analisador_sintatico.py',106),
  ('OrExpr -> OrExpr OU AndExpr','OrExpr',3,'p_OrExpr','analisador_sintatico.py',111),
  ('OrExpr -> AndExpr','OrExpr',1,'p_OrExpr','analisador_sintatico.py',112),
  ('AndExpr -> AndExpr E EqExpr','AndExpr',3,'p_AndExpr','analisador_sintatico.py',117),
  ('AndExpr -> EqExpr','AndExpr',1,'p_AndExpr','analisador_sintatico.py',118),
  ('EqExpr -> EqExpr EQUALS DesigExpr','EqExpr',3,'p_EqExpr','analisador_sintatico.py',123),
  ('EqExpr -> EqExpr DIFF DesigExpr','EqExpr',3,'p_EqExpr','analisador_sintatico.py',124),
  ('EqExpr -> DesigExpr','EqExpr',1,'p_EqExpr','analisador_sintatico.py',125),
  ('DesigExpr -> DesigExpr MENOR AddExpr','DesigExpr',3,'p_DesigExpr','analisador_sintatico.py',130),
  ('DesigExpr -> DesigExpr MAIOR AddExpr','DesigExpr',3,'p_DesigExpr','analisador_sintatico.py',131),
  ('DesigExpr -> DesigExpr MAIOREQUALS AddExpr','DesigExpr',3,'p_DesigExpr','analisador_sintatico.py',132),
  ('DesigExpr -> DesigExpr MENOREQUALS AddExpr','DesigExpr',3,'p_DesigExpr','analisador_sintatico.py',133),
  ('DesigExpr -> AddExpr','DesigExpr',1,'p_DesigExpr','analisador_sintatico.py',134),
  ('AddExpr -> AddExpr PLUS MulExpr','AddExpr',3,'p_AddExpr','analisador_sintatico.py',139),
  ('AddExpr -> AddExpr MINUS MulExpr','AddExpr',3,'p_AddExpr','analisador_sintatico.py',140),
  ('AddExpr -> MulExpr','AddExpr',1,'p_AddExpr','analisador_sintatico.py',141),
  ('MulExpr -> MulExpr TIMES UnExpr','MulExpr',3,'p_MulExpr','analisador_sintatico.py',146),
  ('MulExpr -> MulExpr DIVIDE UnExpr','MulExpr',3,'p_MulExpr','analisador_sintatico.py',147),
  ('MulExpr -> MulExpr MOD UnExpr','MulExpr',3,'p_MulExpr','analisador_sintatico.py',148),
  ('MulExpr -> UnExpr','MulExpr',1,'p_MulExpr','analisador_sintatico.py',149),
  ('UnExpr -> MINUS PrimExpr','UnExpr',2,'p_UnExpr','analisador_sintatico.py',154),
  ('UnExpr -> EXPLAMATION PrimExpr','UnExpr',2,'p_UnExpr','analisador_sintatico.py',155),
  ('UnExpr -> PrimExpr','UnExpr',1,'p_UnExpr','analisador_sintatico.py',156),
  ('LValueExpr -> ID LCOLC Expr RCOLC','LValueExpr',4,'p_LValueExpr','analisador_sintatico.py',161),
  ('LValueExpr -> ID','LValueExpr',1,'p_LValueExpr','analisador_sintatico.py',162),
  ('PrimExpr -> ID LPAREN ListExpr RPAREN','PrimExpr',4,'p_PrimExpr','analisador_sintatico.py',167),
  ('PrimExpr -> ID LPAREN RPAREN','PrimExpr',3,'p_PrimExpr','analisador_sintatico.py',168),
  ('PrimExpr -> ID LCOLC Expr RCOLC','PrimExpr',4,'p_PrimExpr','analisador_sintatico.py',169),
  ('PrimExpr -> ID','PrimExpr',1,'p_PrimExpr','analisador_sintatico.py',170),
  ('PrimExpr -> CONSTSTRING','PrimExpr',1,'p_PrimExpr','analisador_sintatico.py',171),
  ('PrimExpr -> NUMBER','PrimExpr',1,'p_PrimExpr','analisador_sintatico.py',172),
  ('PrimExpr -> LPAREN Expr RPAREN','PrimExpr',3,'p_PrimExpr','analisador_sintatico.py',173),
  ('ListExpr -> AssignExpr','ListExpr',1,'p_ListExpr','analisador_sintatico.py',178),
  ('ListExpr -> ListExpr COMMA AssignExpr','ListExpr',3,'p_ListExpr','analisador_sintatico.py',179),
]
